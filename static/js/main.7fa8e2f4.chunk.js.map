{"version":3,"sources":["components/ImageForm.js","components/ImageList.js","App.js","reportWebVitals.js","index.js"],"names":["ImageForm","props","state","handleChange","bind","handleSubmit","evt","value","target","this","setState","name","event","addImage","preventDefault","onSubmit","onChange","type","Component","ImageList","listItems","images","map","image","index","src","url","caption","defaultImages","App","newEntry","imageCopy","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSA8CeA,E,kDA3Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAIb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,gDAWnB,SAAaE,GACX,IAAMC,EAAQD,EAAIE,OAAOD,MACzBE,KAAKC,SAAL,2BACKD,KAAKP,OADV,kBAEGI,EAAIE,OAAOG,KAAOJ,O,0BAIvB,SAAaK,GACXH,KAAKR,MAAMY,SAASJ,KAAKP,OACzBU,EAAME,mB,oBAGR,WACE,OACE,uBAAMC,SAAUN,KAAKJ,aAArB,UAEA,+CAEE,uBAAOM,KAAO,MAAMK,SAAUP,KAAKN,kBAGnC,mDAEE,0BAAUQ,KAAO,UAAUK,SAAUP,KAAKN,kBAE5C,uBAAOc,KAAK,SAASV,MAAM,kB,GAtCXW,aCkCTC,E,kDA9Bb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,0CASnB,WAEF,IAAMkB,EAAYX,KAAKR,MAAMoB,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACxC,gCACE,qBAAKC,IAAKF,EAAMG,MAChB,4BAAIH,EAAMI,YAFFH,MAKN,OACE,mCACA,8BAEE,8BAAMJ,Y,GAtBUF,aCAlBU,EAAgB,CACpB,CACED,QAAS,iBACTD,IAAK,qDAEP,CACEC,QAAS,iBACTD,IAAK,uDAEP,CACEC,QAAS,iBACTD,IAAK,wDA+CMG,E,kDA1Cb,WAAY5B,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CACXmB,OAAQ,IAEV,EAAKR,SAAW,EAAKA,SAAST,KAAd,gBANA,E,qDASlB,WAEEK,KAAKC,SAAS,CACdW,OAAQO,M,sBAMV,SAASE,GACP,IAAIC,EAAU,YAAItB,KAAKP,MAAMmB,QAC7BU,EAAUC,KAAKF,GACfrB,KAAKC,SAAS,CACZW,OAAQU,M,oBAGZ,WAEE,OACE,qCAEA,cAAC,EAAD,CAAWlB,SAAUJ,KAAKI,WAC1B,cAAC,EAAD,CAAWQ,OAAQZ,KAAKP,MAAMmB,SAC9B,mCAAMZ,KAAKP,MAAMS,KAAjB,c,GAjCYO,aCRHe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7fa8e2f4.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass ImageForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(evt) {\n    const value = evt.target.value;\n    this.setState({\n      ...this.state,\n      [evt.target.name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    this.props.addImage(this.state);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n\n      <label>\n        Image URL:\n        <input name = \"url\" onChange={this.handleChange} />\n      </label>\n\n        <label>\n          Image Caption:\n          <textarea name = \"caption\" onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default ImageForm\n","import { Component } from 'react';\n\n\n\n\nclass ImageList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n\n  render() {\n\nconst listItems = this.props.images.map((image, index) =>(\n<div key={index}>\n  <img src={image.url}></img>\n  <p>{image.caption}</p>\n</div>\n));\n    return (\n      <>\n      <div>\n\n        <div>{listItems}</div>\n\n\n      </div>\n      </>\n    );\n  }\n}\n\nexport default ImageList\n","import { Component } from 'react';\nimport './App.css';\nimport ImageForm from './components/ImageForm.js';\nimport ImageList from './components/ImageList.js';\n\nconst defaultImages = [\n  {\n    caption: 'Animal image 1',\n    url: 'https://www.randomlists.com/img/animals/deer.webp'\n  },\n  {\n    caption: 'Animal image 2',\n    url: 'https://www.randomlists.com/img/animals/ocelot.webp'\n  },\n  {\n    caption: 'Animal image 3',\n    url: 'https://www.randomlists.com/img/animals/dugong.webp'\n  }\n]\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      images: [],\n    };\n    this.addImage = this.addImage.bind(this);\n  }\n\n  componentDidMount(){\n\n    this.setState({\n    images: defaultImages\n\n    });\n  }\n\n\n  addImage(newEntry){\n    let imageCopy=[...this.state.images];\n    imageCopy.push(newEntry);\n    this.setState({\n      images: imageCopy,\n    });\n  }\n  render() {\n\n    return (\n      <>\n\n      <ImageForm addImage={this.addImage}/>\n      <ImageList images={this.state.images}/>\n      <h1> {this.state.name} </h1>\n\n\n     </>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}